# Generated from .\Rhtml.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,25,402,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,1,0,1,0,1,1,
        1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,
        1,6,1,6,1,6,3,6,74,8,6,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,
        8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,3,8,100,8,
        8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,3,9,300,8,9,1,10,1,10,1,10,1,10,1,10,1,
        10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,
        10,1,10,1,10,1,10,1,10,3,10,325,8,10,1,11,1,11,4,11,329,8,11,11,
        11,12,11,330,1,12,1,12,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,15,1,
        15,1,15,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,
        18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,
        20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,22,1,22,5,22,379,8,22,10,
        22,12,22,382,9,22,1,22,1,22,1,23,1,23,3,23,388,8,23,1,23,1,23,5,
        23,392,8,23,10,23,12,23,395,9,23,3,23,397,8,23,1,24,1,24,1,24,1,
        24,0,0,25,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,
        12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,
        23,47,24,49,25,1,0,7,1,0,49,54,2,0,113,113,115,115,1,0,97,122,5,
        0,10,10,32,32,48,57,65,90,97,122,1,0,49,57,1,0,48,57,3,0,9,10,13,
        13,32,32,461,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,
        1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,
        1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,
        1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,
        1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,
        1,0,0,0,1,51,1,0,0,0,3,53,1,0,0,0,5,55,1,0,0,0,7,57,1,0,0,0,9,61,
        1,0,0,0,11,64,1,0,0,0,13,73,1,0,0,0,15,75,1,0,0,0,17,99,1,0,0,0,
        19,299,1,0,0,0,21,324,1,0,0,0,23,326,1,0,0,0,25,332,1,0,0,0,27,334,
        1,0,0,0,29,336,1,0,0,0,31,339,1,0,0,0,33,344,1,0,0,0,35,348,1,0,
        0,0,37,353,1,0,0,0,39,362,1,0,0,0,41,368,1,0,0,0,43,372,1,0,0,0,
        45,376,1,0,0,0,47,396,1,0,0,0,49,398,1,0,0,0,51,52,5,46,0,0,52,2,
        1,0,0,0,53,54,5,44,0,0,54,4,1,0,0,0,55,56,5,61,0,0,56,6,1,0,0,0,
        57,58,5,101,0,0,58,59,5,110,0,0,59,60,5,100,0,0,60,8,1,0,0,0,61,
        62,5,100,0,0,62,63,5,111,0,0,63,10,1,0,0,0,64,65,5,104,0,0,65,66,
        5,116,0,0,66,67,5,109,0,0,67,68,5,108,0,0,68,12,1,0,0,0,69,70,5,
        117,0,0,70,74,5,108,0,0,71,72,5,111,0,0,72,74,5,108,0,0,73,69,1,
        0,0,0,73,71,1,0,0,0,74,14,1,0,0,0,75,76,5,108,0,0,76,77,5,105,0,
        0,77,16,1,0,0,0,78,79,5,98,0,0,79,80,5,111,0,0,80,81,5,100,0,0,81,
        100,5,121,0,0,82,83,5,102,0,0,83,84,5,111,0,0,84,85,5,111,0,0,85,
        86,5,116,0,0,86,87,5,101,0,0,87,100,5,114,0,0,88,89,5,104,0,0,89,
        90,5,101,0,0,90,91,5,97,0,0,91,100,5,100,0,0,92,93,5,109,0,0,93,
        94,5,97,0,0,94,95,5,105,0,0,95,100,5,110,0,0,96,97,5,110,0,0,97,
        98,5,97,0,0,98,100,5,118,0,0,99,78,1,0,0,0,99,82,1,0,0,0,99,88,1,
        0,0,0,99,92,1,0,0,0,99,96,1,0,0,0,100,18,1,0,0,0,101,300,5,97,0,
        0,102,103,5,97,0,0,103,104,5,98,0,0,104,105,5,98,0,0,105,300,5,114,
        0,0,106,107,5,97,0,0,107,108,5,100,0,0,108,109,5,100,0,0,109,110,
        5,114,0,0,110,111,5,101,0,0,111,112,5,115,0,0,112,300,5,115,0,0,
        113,114,5,97,0,0,114,115,5,114,0,0,115,116,5,101,0,0,116,300,5,97,
        0,0,117,118,5,97,0,0,118,119,5,114,0,0,119,120,5,116,0,0,120,121,
        5,105,0,0,121,122,5,99,0,0,122,123,5,108,0,0,123,300,5,101,0,0,124,
        125,5,97,0,0,125,126,5,115,0,0,126,127,5,105,0,0,127,128,5,100,0,
        0,128,300,5,101,0,0,129,300,5,98,0,0,130,131,5,98,0,0,131,132,5,
        100,0,0,132,300,5,105,0,0,133,134,5,98,0,0,134,135,5,100,0,0,135,
        300,5,111,0,0,136,137,5,98,0,0,137,138,5,108,0,0,138,139,5,111,0,
        0,139,140,5,99,0,0,140,141,5,107,0,0,141,142,5,113,0,0,142,143,5,
        117,0,0,143,144,5,111,0,0,144,145,5,116,0,0,145,300,5,101,0,0,146,
        147,5,98,0,0,147,148,5,117,0,0,148,149,5,116,0,0,149,150,5,116,0,
        0,150,151,5,111,0,0,151,300,5,110,0,0,152,153,5,99,0,0,153,154,5,
        105,0,0,154,155,5,116,0,0,155,300,5,101,0,0,156,157,5,100,0,0,157,
        158,5,101,0,0,158,300,5,108,0,0,159,160,5,100,0,0,160,161,5,101,
        0,0,161,162,5,116,0,0,162,163,5,97,0,0,163,164,5,105,0,0,164,165,
        5,108,0,0,165,300,5,115,0,0,166,167,5,100,0,0,167,168,5,105,0,0,
        168,300,5,118,0,0,169,170,5,101,0,0,170,300,5,109,0,0,171,172,5,
        104,0,0,172,300,7,0,0,0,173,174,5,104,0,0,174,175,5,101,0,0,175,
        176,5,97,0,0,176,177,5,100,0,0,177,178,5,101,0,0,178,300,5,114,0,
        0,179,180,5,104,0,0,180,300,5,114,0,0,181,300,5,105,0,0,182,183,
        5,105,0,0,183,184,5,102,0,0,184,185,5,114,0,0,185,186,5,97,0,0,186,
        187,5,109,0,0,187,300,5,101,0,0,188,189,5,105,0,0,189,190,5,110,
        0,0,190,300,5,115,0,0,191,192,5,107,0,0,192,193,5,98,0,0,193,300,
        5,100,0,0,194,195,5,109,0,0,195,196,5,97,0,0,196,197,5,114,0,0,197,
        300,5,107,0,0,198,199,5,109,0,0,199,200,5,101,0,0,200,201,5,116,
        0,0,201,300,5,97,0,0,202,203,5,109,0,0,203,204,5,101,0,0,204,205,
        5,116,0,0,205,206,5,101,0,0,206,300,5,114,0,0,207,208,5,110,0,0,
        208,209,5,111,0,0,209,210,5,115,0,0,210,211,5,99,0,0,211,212,5,114,
        0,0,212,213,5,105,0,0,213,214,5,112,0,0,214,300,5,116,0,0,215,216,
        5,111,0,0,216,217,5,98,0,0,217,218,5,106,0,0,218,219,5,101,0,0,219,
        220,5,99,0,0,220,300,5,116,0,0,221,300,5,112,0,0,222,223,5,112,0,
        0,223,224,5,114,0,0,224,300,5,101,0,0,225,226,5,112,0,0,226,227,
        5,114,0,0,227,228,5,111,0,0,228,229,5,103,0,0,229,230,5,114,0,0,
        230,231,5,101,0,0,231,232,5,115,0,0,232,300,5,115,0,0,233,300,7,
        1,0,0,234,235,5,115,0,0,235,236,5,99,0,0,236,237,5,114,0,0,237,238,
        5,105,0,0,238,239,5,112,0,0,239,300,5,116,0,0,240,241,5,115,0,0,
        241,242,5,101,0,0,242,243,5,99,0,0,243,244,5,116,0,0,244,245,5,105,
        0,0,245,246,5,111,0,0,246,300,5,110,0,0,247,248,5,115,0,0,248,249,
        5,109,0,0,249,250,5,97,0,0,250,251,5,108,0,0,251,300,5,108,0,0,252,
        253,5,115,0,0,253,254,5,112,0,0,254,255,5,97,0,0,255,300,5,110,0,
        0,256,257,5,115,0,0,257,258,5,116,0,0,258,259,5,114,0,0,259,260,
        5,111,0,0,260,261,5,110,0,0,261,300,5,103,0,0,262,263,5,115,0,0,
        263,264,5,117,0,0,264,300,5,98,0,0,265,266,5,115,0,0,266,267,5,117,
        0,0,267,268,5,109,0,0,268,269,5,109,0,0,269,270,5,97,0,0,270,271,
        5,114,0,0,271,300,5,121,0,0,272,273,5,115,0,0,273,274,5,117,0,0,
        274,300,5,112,0,0,275,276,5,116,0,0,276,277,5,101,0,0,277,278,5,
        120,0,0,278,279,5,116,0,0,279,280,5,97,0,0,280,281,5,114,0,0,281,
        282,5,101,0,0,282,300,5,97,0,0,283,284,5,116,0,0,284,285,5,105,0,
        0,285,286,5,109,0,0,286,300,5,101,0,0,287,288,5,116,0,0,288,289,
        5,105,0,0,289,290,5,116,0,0,290,291,5,108,0,0,291,300,5,101,0,0,
        292,300,5,117,0,0,293,294,5,118,0,0,294,295,5,97,0,0,295,300,5,114,
        0,0,296,297,5,119,0,0,297,298,5,98,0,0,298,300,5,114,0,0,299,101,
        1,0,0,0,299,102,1,0,0,0,299,106,1,0,0,0,299,113,1,0,0,0,299,117,
        1,0,0,0,299,124,1,0,0,0,299,129,1,0,0,0,299,130,1,0,0,0,299,133,
        1,0,0,0,299,136,1,0,0,0,299,146,1,0,0,0,299,152,1,0,0,0,299,156,
        1,0,0,0,299,159,1,0,0,0,299,166,1,0,0,0,299,169,1,0,0,0,299,171,
        1,0,0,0,299,173,1,0,0,0,299,179,1,0,0,0,299,181,1,0,0,0,299,182,
        1,0,0,0,299,188,1,0,0,0,299,191,1,0,0,0,299,194,1,0,0,0,299,198,
        1,0,0,0,299,202,1,0,0,0,299,207,1,0,0,0,299,215,1,0,0,0,299,221,
        1,0,0,0,299,222,1,0,0,0,299,225,1,0,0,0,299,233,1,0,0,0,299,234,
        1,0,0,0,299,240,1,0,0,0,299,247,1,0,0,0,299,252,1,0,0,0,299,256,
        1,0,0,0,299,262,1,0,0,0,299,265,1,0,0,0,299,272,1,0,0,0,299,275,
        1,0,0,0,299,283,1,0,0,0,299,287,1,0,0,0,299,292,1,0,0,0,299,293,
        1,0,0,0,299,296,1,0,0,0,300,20,1,0,0,0,301,302,5,98,0,0,302,303,
        5,97,0,0,303,304,5,115,0,0,304,325,5,101,0,0,305,306,5,98,0,0,306,
        325,5,114,0,0,307,308,5,101,0,0,308,309,5,109,0,0,309,310,5,98,0,
        0,310,311,5,101,0,0,311,325,5,100,0,0,312,313,5,105,0,0,313,314,
        5,109,0,0,314,325,5,103,0,0,315,316,5,108,0,0,316,317,5,105,0,0,
        317,318,5,110,0,0,318,325,5,107,0,0,319,320,5,112,0,0,320,321,5,
        97,0,0,321,322,5,114,0,0,322,323,5,97,0,0,323,325,5,109,0,0,324,
        301,1,0,0,0,324,305,1,0,0,0,324,307,1,0,0,0,324,312,1,0,0,0,324,
        315,1,0,0,0,324,319,1,0,0,0,325,22,1,0,0,0,326,328,5,33,0,0,327,
        329,7,2,0,0,328,327,1,0,0,0,329,330,1,0,0,0,330,328,1,0,0,0,330,
        331,1,0,0,0,331,24,1,0,0,0,332,333,5,91,0,0,333,26,1,0,0,0,334,335,
        5,93,0,0,335,28,1,0,0,0,336,337,5,46,0,0,337,338,5,46,0,0,338,30,
        1,0,0,0,339,340,5,105,0,0,340,341,5,116,0,0,341,342,5,101,0,0,342,
        343,5,114,0,0,343,32,1,0,0,0,344,345,5,102,0,0,345,346,5,111,0,0,
        346,347,5,114,0,0,347,34,1,0,0,0,348,349,5,101,0,0,349,350,5,97,
        0,0,350,351,5,99,0,0,351,352,5,104,0,0,352,36,1,0,0,0,353,354,5,
        115,0,0,354,355,5,116,0,0,355,356,5,114,0,0,356,357,5,105,0,0,357,
        358,5,110,0,0,358,359,5,103,0,0,359,360,5,91,0,0,360,361,5,93,0,
        0,361,38,1,0,0,0,362,363,5,105,0,0,363,364,5,110,0,0,364,365,5,116,
        0,0,365,366,5,91,0,0,366,367,5,93,0,0,367,40,1,0,0,0,368,369,5,115,
        0,0,369,370,5,116,0,0,370,371,5,114,0,0,371,42,1,0,0,0,372,373,5,
        105,0,0,373,374,5,110,0,0,374,375,5,116,0,0,375,44,1,0,0,0,376,380,
        5,34,0,0,377,379,7,3,0,0,378,377,1,0,0,0,379,382,1,0,0,0,380,378,
        1,0,0,0,380,381,1,0,0,0,381,383,1,0,0,0,382,380,1,0,0,0,383,384,
        5,34,0,0,384,46,1,0,0,0,385,397,5,48,0,0,386,388,5,45,0,0,387,386,
        1,0,0,0,387,388,1,0,0,0,388,389,1,0,0,0,389,393,7,4,0,0,390,392,
        7,5,0,0,391,390,1,0,0,0,392,395,1,0,0,0,393,391,1,0,0,0,393,394,
        1,0,0,0,394,397,1,0,0,0,395,393,1,0,0,0,396,385,1,0,0,0,396,387,
        1,0,0,0,397,48,1,0,0,0,398,399,7,6,0,0,399,400,1,0,0,0,400,401,6,
        24,0,0,401,50,1,0,0,0,10,0,73,99,299,324,330,380,387,393,396,1,6,
        0,0
    ]

class RhtmlLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    END = 4
    DO = 5
    HTML = 6
    LIST = 7
    LIST_ITEM = 8
    MAIN_TAG = 9
    DOUBLE_TAG = 10
    SINGLE_TAG = 11
    TAG_OPTION = 12
    LEFT = 13
    RIGHT = 14
    DOTS = 15
    ITER = 16
    FOR = 17
    EACH = 18
    STRING_LIST_TYPE = 19
    INT_LIST_TYPE = 20
    STRING_TYPE = 21
    INT_TYPE = 22
    STRING = 23
    INT = 24
    WHITESPACE = 25

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'.'", "','", "'='", "'end'", "'do'", "'html'", "'li'", "'['", 
            "']'", "'..'", "'iter'", "'for'", "'each'", "'string[]'", "'int[]'", 
            "'str'", "'int'" ]

    symbolicNames = [ "<INVALID>",
            "END", "DO", "HTML", "LIST", "LIST_ITEM", "MAIN_TAG", "DOUBLE_TAG", 
            "SINGLE_TAG", "TAG_OPTION", "LEFT", "RIGHT", "DOTS", "ITER", 
            "FOR", "EACH", "STRING_LIST_TYPE", "INT_LIST_TYPE", "STRING_TYPE", 
            "INT_TYPE", "STRING", "INT", "WHITESPACE" ]

    ruleNames = [ "T__0", "T__1", "T__2", "END", "DO", "HTML", "LIST", "LIST_ITEM", 
                  "MAIN_TAG", "DOUBLE_TAG", "SINGLE_TAG", "TAG_OPTION", 
                  "LEFT", "RIGHT", "DOTS", "ITER", "FOR", "EACH", "STRING_LIST_TYPE", 
                  "INT_LIST_TYPE", "STRING_TYPE", "INT_TYPE", "STRING", 
                  "INT", "WHITESPACE" ]

    grammarFileName = "Rhtml.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


